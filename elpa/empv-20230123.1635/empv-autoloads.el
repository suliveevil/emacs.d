;;; empv-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (file-name-directory load-file-name)) (car load-path)))



;;; Generated autoloads from empv.el

(defvar empv-map (let ((map (make-sparse-keymap))) (define-key map "o" 'empv-play) (define-key map "f" 'empv-play-file) (define-key map "d" 'empv-play-directory) (define-key map "v" 'empv-play-video) (define-key map "a" 'empv-play-audio) (define-key map "i" 'empv-display-current) (define-key map "c" 'empv-copy-path) (define-key map "t" 'empv-toggle) (define-key map "_" 'empv-toggle-video) (define-key map "r" 'empv-play-radio) (define-key map "R" 'empv-play-random-channel) (define-key map "l" 'empv-log-current-radio-song-name) (define-key map "[" 'empv-playback-speed-down) (define-key map "]" 'empv-playback-speed-up) (put 'empv-playback-speed-up 'repeat-map 'empv-map) (put 'empv-playback-speed-down 'repeat-map 'empv-map) (define-key map "9" 'empv-volume-down) (define-key map "0" 'empv-volume-up) (put 'empv-volume-up 'repeat-map 'empv-map) (put 'empv-volume-down 'repeat-map 'empv-map) (define-key map "p" 'empv-playlist-select) (define-key map "s" 'empv-playlist-shuffle) (define-key map "C" 'empv-playlist-clear) (define-key map "n" 'empv-playlist-next) (define-key map "N" 'empv-playlist-prev) (put 'empv-playlist-next 'repeat-map 'empv-map) (put 'empv-playlist-prev 'repeat-map 'empv-map) (define-key map "y" 'empv-youtube) (define-key map "Y" 'empv-youtube-last-results) (define-key map "q" 'empv-exit) map) "\
Keymap for commonly used empv functions.
It is not bound to any key by default.  Some keys are loosely
modelled after default keys of mpv.")
(autoload 'empv-play "empv" "\
Play given URI.
Add given URI to end of the current playlist and immediately
switch to it

(fn URI)" t)
(autoload 'empv-play-file "empv" "\
Play given PATH.
This is just a simple wrapper around `empv-play' that displays
`find-file' dialog if called interactively.

(fn PATH)" t)
(autoload 'empv-play-directory "empv" "\
Enqueue given files under PATH.
If called interactively, shows a prompt to select a directory.  By
default this directory is `default-directory'.  If you want this
function to start the prompt in same directory everytime, please
see `empv-base-directory'.

(fn PATH)" t)
(autoload 'empv-resume "empv" "\
Resume the playback." t)
(autoload 'empv-pause "empv" "\
Pause the playback." t)
(autoload 'empv-toggle "empv" "\
Toggle the playback." t)
(autoload 'empv-current-loop-on "empv" "\
Turn on loop for current file." t)
(autoload 'empv-current-loop-off "empv" "\
Turn off loop for current file." t)
(autoload 'empv-volume-up "empv" "\
Up the volume to a max of 100%." t)
(autoload 'empv-volume-down "empv" "\
Down the volume to a min of 0%." t)
(autoload 'empv-set-volume "empv" "\
Set the exact volume." t)
(autoload 'empv-set-playback-speed "empv" "\
Set the exact playback speed." t)
(autoload 'empv-playback-speed-down "empv" "\
Lower the playback speed by `0.25'." t)
(autoload 'empv-playback-speed-up "empv" "\
Increase the playback speed by `0.25'." t)
(autoload 'empv-toggle-video "empv" "\
Toggle the video display.
You can press \"_\" to hide it again when you are focused on
MPV." t)
(autoload 'empv-exit "empv" "\
Shut down mpv." t)
(autoload 'empv-save-and-exit "empv" "\
Exit and save the current playing position.
Playing that file later will seek to the previous position on
start.  This is equivalent to doing `Shift + q' on an mpv
window." t)
(autoload 'empv-toggle-event-display "empv" "\
Toggle debug mode." t)
(autoload 'empv-toggle-debug "empv" "\
Toggle debug mode." t)
(autoload 'empv-enqueue "empv" "\
Like `empv-play' but add the given URI to end of the playlist.

(fn URI)" t)
(autoload 'empv-playlist-next "empv" "\
Play next in the playlist." t)
(autoload 'empv-playlist-prev "empv" "\
Play previous in the playlist." t)
(autoload 'empv-playlist-clear "empv" "\
Clear the current playlist." t)
(autoload 'empv-playlist-shuffle "empv" "\
Shuffle the current playlist." t)
(autoload 'empv-playlist-select "empv" "\
Select a playlist entry and play it." t)
(autoload 'empv-playlist-loop-on "empv" "\
Turn on loop for playlist." t)
(autoload 'empv-playlist-loop-off "empv" "\
Turn off loop for playlist." t)
(autoload 'empv-playtlist-save-to-file "empv" "\
Save the current playlist to FILENAME.

(fn FILENAME)" t)
(autoload 'empv-display-current "empv" "\
Display currently playing item's title and media player state.
If ARG is non-nil, then also put the title to `kill-ring'.

(fn ARG)" t)
(autoload 'empv-play-radio "empv" "\
Play radio channels." t)
(autoload 'empv-play-random-channel "empv" "\
Play a random radio channel." t)
(autoload 'empv-youtube "empv" "\
Search TERM in YouTube videos.

(fn TERM)" t)
(autoload 'empv-youtube-tabulated "empv" "\
Search TERM in YouTube videos.
Show results in a tabulated buffers with thumbnails.

(fn TERM)" t)
(autoload 'empv-youtube-playlist "empv" "\
Search TERM in YouTube playlists.

(fn TERM)" t)
(autoload 'empv-play-video "empv" "\
Interactively select and play a video file from `empv-video-dir'." t)
(autoload 'empv-play-audio "empv" "\
Interactively select and play an audio file from `empv-audio-dir'." t)
(register-definition-prefixes "empv" '("empv-"))

;;; End of scraped data

(provide 'empv-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; empv-autoloads.el ends here
