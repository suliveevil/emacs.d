(use-package emacs
  :ensure nil
    :bind
  (
   ([remap fill-paragraph] . my/toggle-fill-unfill)
   )
  :config
  (setq-default fill-column 80) ;; M-x set-fill-column RET

  (defun my/toggle-fill-unfill ()
    "Like `fill-paragraph', but unfill if used twice."
    (interactive)
    (let ((fill-column
           (if (eq last-command 'my-fill-or-unfill)
               (progn (setq this-command nil)
                      (point-max))
             fill-column)))
      (call-interactively 'fill-paragraph nil (vector nil t))))

  ;; https://www.emacswiki.org/emacs/UnfillParagraph
  (defun my/unfill-paragraph (&optional region)
    "Takes a multi-line paragraph and makes it into a single line of text."
    (interactive (progn (barf-if-buffer-read-only) '(t)))
    (let ((fill-column (point-max))
          ;; This would override `fill-column' if it's an integer.
          (emacs-lisp-docstring-fill-column t))
      (fill-paragraph nil region))
    )

  )
